plugins {
    id 'org.springframework.boot' version '3.5.4'
    id 'java'
    id 'idea'
    id 'com.github.node-gradle.node' version '7.1.0'
}

apply plugin: 'io.spring.dependency-management'

group 'com.github.srwaggon'
version '1.0-SNAPSHOT'
sourceCompatibility = '24'

repositories {
    mavenCentral()
}

node {
    // Whether to download and install a specific Node.js version or not
    // If false, it will use the globally installed Node.js
    // If true, it will download node using above parameters
    // Note that npm is bundled with Node.js
    download = true

    // Version of node to download and install (only used if download is true)
    // It will be unpacked in the workDir
    version = '18.18.0'

    nodeProjectDir = file("${project.projectDir}/src/main/javascript/adventure")
    // The directory where Node.js is unpacked (when download is true)
    workDir = file("${project.projectDir}/.gradle/nodejs")

    // The directory where npm is installed (when a specific version is defined)
    npmWorkDir = file("${project.projectDir}/.gradle/npm")

    // Version of Yarn to use
    // Any Yarn task first installs Yarn in the yarnWorkDir
    // It uses the specified version if defined and the latest version otherwise (by default)
    yarnVersion = ""

    // The directory where yarn is installed (when a Yarn task is used)
    yarnWorkDir = file("${project.projectDir}/.gradle/yarn")
}

dependencies {
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    compileOnly 'org.projectlombok:lombok:1.18.24'

    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'com.google.guava:guava:32.0.1-android'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    testImplementation "org.assertj:assertj-core:3.11.1"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

task buildReactApp(type: YarnTask, dependsOn: 'npmInstall') {
    args = ['build']
}

task startDevServer(type: YarnTask, dependsOn: 'npmInstall') {
    args = ['start']
}

//clean.delete << file('src/main/javascript/adventure/build')
//clean.delete << file('src/main/javascript/adventure/node_modules')
clean.delete << file('src/main/resources/static')

task copyReactApp(type: Copy) {
    from file("src/main/javascript/adventure/build")
    into file("src/main/resources/static")
}
copyReactApp.mustRunAfter 'buildReactApp'

processResources.dependsOn 'buildReactApp'
processResources.dependsOn 'copyReactApp'
